
import './App.css';
import React, {useState, useEffect } from 'react';
import { getAgencies, getZipCode } from './services/freshtrakApiService.js';
import { Map, TileLayer, Marker, Popup } from 'react-leaflet';
import { ZipForm } from './ZipForm.js'

function App() {
  const [agencies, setAgencies] = useState([]);
  // eslint-disable-next-line no-unused-vars
  const [errorMsg, setErrorMsg] = useState('');
  const [center, setCenter] = useState([40, -83]);
  const [zoom, setZoom] = useState(11.5);
  const [height, setHeight] = useState(window.innerHeight * 0.9);
  const [width, setWidth] = useState(window.Width * 0.9);
  const [zipCode, setZipCode] = useState('43215');
  const [zipCodeUpdated, setZipCodeUpdated] = useState(false);
  const [checkedUserLocation, setCheckedUserLocation] = useState(false);
  const [usingUsersLocation, setUsingUsersLocation] = useState('');
  const [zipCodeData, setZipCodeData] = useState([]);
  const [prevZipCode, setPrevZipCode] = useState('');

  useEffect(() => {
    if (agencies.length === 0 || zipCodeUpdated || !checkedUserLocation) {
      if (!checkedUserLocation) 
        getUserLocation();
      if (zipCodeUpdated) {
        getZipCodeData(zipCode);
        if (zipCodeData.length > 0) {
          setCenter([zipCodeData[0].latitude, zipCodeData[0].longitude]);
          setZipCodeUpdated(false);
          setUsingUsersLocation('');
          setErrorMsg('');
        }
      }
      console.log(`center: ${center}`);
      getAgencies(zipCode)
        .then(res => res.json())
        .then(res => setAgencies(res.agencies))
        .catch((error) => {
          setErrorMsg(`Failed to fetch agencies: ${error}`)
        });
    }
  }, [agencies, zipCode, zipCodeUpdated, center, checkedUserLocation, zipCodeData]);

  function getZipCodeData(zipCode) {
    getZipCode(zipCode)
      .then(res => res.json())
      .then(res => setZipCodeData(res.zip_codes))
      .catch((error) => {
        setErrorMsg(`Failed to fetch zip_codes: ${error}`)
      });
  }

  function getUserLocation() {
    if ("geolocation" in navigator) {
      console.log("Available");
      navigator.geolocation.getCurrentPosition(function(position) {
        console.log("Latitude is :", position.coords.latitude);
        console.log("Longitude is :", position.coords.longitude);
        setCenter([position.coords.latitude, position.coords.longitude])
        setUsingUsersLocation("Using Your Device's Location");
      });
    }
    setCheckedUserLocation(true);
  }

  return (
    //agencies.map(agency => ({latitude: agency.events[0].latitude, longitude: agency.events[0].longitude}))
    
    <div className="App"> 
      <p style={{color: "green"}}>{ usingUsersLocation} </p>
      <p style={{color: "red"}}>{ errorMsg } </p>

      <div className="ZipCode">
        <p/>
        <ZipForm 
          zipCode={zipCode}
          setZipCode={setZipCode}
          zipCodeUpdated={zipCodeUpdated}
          setZipCodeUpdated={setZipCodeUpdated}
          errorMsg={errorMsg}
          setErrorMsg={setErrorMsg}
        />
      </div>
        <Map
          //tap={false} //needed for Safari browser
          center={center}
          zoom={zoom}
          width={width}
          height={height}
          style={{height: height + 'px'}}
          //onClick={this.addMarker}
        >
          <TileLayer
            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
            attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
          />
          {agencies.map(agency => {
            return (
              <Marker 
                position={[
                  agency.events[0].latitude,
                  agency.events[0].longitude
                ]}
                key={agency['id']}>
                <Popup>
                  <div className="info-box">
                    <div className="content">
                      <h2> Agency </h2>
                      <h4> Name </h4>
                      <p>{(agency.name)}</p>
                      <h4> Address </h4>
                      <p>{(agency.address)}</p>
                      <p>{(agency.city)}{'\u00A0'}{'\n'}{agency.state}{'\u00A0'}{agency.zip}</p>
                    </div>
                  </div>
                </Popup>
              </Marker>
            )
          })
        }
        </Map>
      </div>
  );
}
export default App;